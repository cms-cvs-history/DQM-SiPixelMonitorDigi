process SiPixelMonitorDigiProcess = {


   	source = PoolSource {
        untracked vstring fileNames = {'file:digis.root'}
        untracked int32 maxEvents = -1
        untracked uint32 debugVebosity = 10
        untracked bool   debugFlag     = true
    	}

	# Tracker SimGeometryXML
  	include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"

  	# Tracker Geometry Builder
  	include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  	# Tracker Numbering Builder
  	include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

        #es_module = TrackerDigiGeometryESModule {}


         service = DaqMonitorROOTBackEnd{}

  	service = MonitorDaemon{
#	 if true, will automatically start DQM thread in background
  	untracked bool AutoInstantiate=true   
# 	if >=0, upon a connection problem, the source will automatically 
# 	attempt to reconnect with a time delay (secs) specified here 
# 	(default: 5)
	  untracked int32 reconnect_delay = 5
#	 collector hostname; examples: localhost(default),lxcmse2.cern.ch, etc
  	untracked string DestinationAddress = "localhost"
#	port for communicating with collector (default: 9090)
	untracked int32 SendPort = 9090
#	monitoring period in ms (i.e. how often monitoring elements 
#	are shipped to the collector; default: 1000)
	untracked int32 UpdateDelay = 5000
#	name of DQM source (default: DQMSource)
 	untracked string NameAsSource = "FU0" 
       }	

       module prod =  SiPixelDigiSource{}
       #provide a scheduler path
       path p1 = {prod}
}
